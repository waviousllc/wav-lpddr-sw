# This is a workflow to create a wav-lpddr-sw release

name: WAV-LPDDR-SW Release

# Controls when the workflow will run
on:
  # Triggers the workflow on tag events
  push:
    tags:
      - 'v*' # Push events matching release tag

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout WAV-LPDDR-SW Source Code
        id: checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Login to Docker Hub
        id: login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build WAV-LPDDR-SW Binaries
        id: docker-run
        run: |
          docker run -v ${{ env.GITHUB_WORKSPACE }}:/usr/local/build/src/ waviousllc/riscv-build:latest

      - name: Archive WAV-LPDDR-SW Binaries
        id: archive
        run: |
          cd ${{ env.GITHUB_WORKSPACE }}/build/bin/
          tar -czf ${{ env.GITHUB_WORKSPACE }}/binaries.tgz --owner=0 --group=0 wddr*

      - name: Create WAV-LPDDR-SW Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Version ${{ github.ref }} Release
          draft: true
          prerelease: false

      - name: Upload WAV-LPDDR-SW Binaries
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: binaries.tgz
          asset_name: binaries.tgz
          asset_content_type: application/x-tar
