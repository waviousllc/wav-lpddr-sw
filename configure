#! /bin/sh
# Configures build environment for appropriate target architecture

# Definitions
BUILD_DIR="build"
BUILD_TYPE=""
CONFIG_CAL_PLL="true"
CONFIG_CAL_ZQCAL="true"
CONFIG_CAL_SA="true"
CONFIG_DRAM_TRAIN="false"

# Common build prep function
init_build_common() {
  mkdir -p ${BUILD_DIR}
}

init_lpddr() {
  cd ${BUILD_DIR}
  cmake .. -DCMAKE_TOOLCHAIN_FILE="../rtos/toolchain/riscv.toolchain" \
           -DCONFIG_SRC_ARCH="riscv" \
           -DCONFIG_TARGET_ARCH="riscv32" \
           -DCONFIG_TARGET_BOARD="wavious-mcu" \
           -DCONFIG_CALIBRATE_PLL=${CONFIG_CAL_PLL} \
           -DCONFIG_CALIBRATE_ZQCAL=${CONFIG_CAL_ZQCAL} \
           -DCONFIG_CALIBRATE_SA=${CONFIG_CAL_SA} \
           -DCONFIG_DRAM_TRAIN=${CONFIG_DRAM_TRAIN} \
           -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
  cd ..
}

print_help() {
echo "Usage: configure [OPTIONS]\n"
echo "This program configures CMAKE for wavious lpddr project\n"
echo "Options:"
echo "-t, --build_type <Debug | Release>"
echo "--no-pll-cal      (disables PLL calibration)"
echo "--no-zqcal-cal    (disables ZQCAL calibration)"
echo "--no-sa-cal       (disables SA calibration)"
echo "--dram-train      (enables DRAM training at boot)"
}

PARAMS=""
while [ $# -gt 0 ]; do
  case "$1" in
    -t | --build_type)
      BUILD_TYPE=$2
      shift 2
      ;;
    --no-pll-cal)
      CONFIG_CAL_PLL="false"
      shift 1
      ;;
    --no-zqcal-cal)
      CONFIG_CAL_ZQCAL="false"
      shift 1
      ;;
     --no-sa-cal)
      CONFIG_CAL_SA="false"
      shift 1
      ;;
     --dram-train)
      CONFIG_DRAM_TRAIN="true"
      shift 1
      ;;
    -h | --help)
      print_help
      exit
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"

init_build_common
init_lpddr
